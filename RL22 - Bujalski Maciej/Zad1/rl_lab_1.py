# -*- coding: utf-8 -*-
"""RL_lab_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qmevZyM_pCHfQAFO2HUtWXud-_D3f1w3
"""

b = 11.0
B = "Ala ma koty"
zm1 = 12
zm2 = 4
Zm3 = "5"

b, B, zm1, zm2, Zm3

print(b, end='')
print(B)
print(zm1)
print(zm2) 
print(Zm3)

type(b), type(B), type(zm1), type(zm2), type(Zm3)

int(b)

a,b,c,d=1.0,"tekst",12,100

a,b,c,d

zm1+zm2
print(B+" i psa")
print(b%zm2)
print(b*zm1)
print(b**zm1)
print(B*zm1)

"""ostanie print(B*Zm3) nie dziala

"""

print(len(B))
print(B[0])
print(B[1])
print(B[3:6])
print(B[3:])
print(B[:6])
print(B[-2])

a= "Początek zdania "
b= " koniec zdania "

a+b

a+str(11)

12+13

12**3

B = "Ala ma koty"

B[0]

B[0:2] #interesują nas litery od indeksu 0 do indeksu 2-1

B[0:5]

B[0:],B[:6],B[1:7:2],B[-1],B[6:0:-1]

print(B*int(Zm3))

print(type(str(3)))

type(str(3))

Bnew = B[0:7]

Bnew=Bnew+str(3)

Bnew+B[6:]

B[0:7]+str(3)+B[6:]

B[7:10]

B[7:10]="abc"

"""nie mozna zrobić podmiany"""

x=str(input("wprowadz ciąg znaków: "))
print(x)

len(x)

x= int(input("Liczba: "))
if x>0:
  print("Liczba>0")
elif x==0:
  print("Liczba = 0")  
else:
  print("Liczba <0")

a=int(input("Wspolczynnik a: "))
b=int(input("Wspolczynnik b: "))
c=int(input("Wspolczynnik c: "))
delta= b*b-4*a*c
print(delta)
if delta>0:
  print("Dwa rozwiazania")
elif delta==0:
  print("Jedno rozwiazanie")  
else:
  print("Brak rozwiazan")

import math

math.sqrt(9)

import math 
a=int(input("Wspolczynnik a: "))
b=int(input("Wspolczynnik b: "))
c=int(input("Wspolczynnik c: "))
if a!=0:
  delta= b*b-4*a*c
  print("Delta")
  print(delta)
  if delta>0:
    print("Dwa rozwiazania")
    print((-b-math.sqrt(delta))/(2*a))
    print((-b+math.sqrt(delta))/(2*a))
  elif delta==0:
    print("Jedno rozwiazanie")  
    print((-b)/(2*a))
  else:
    print("Brak rozwiazan")
else:
  print("Rowanie liniowe jedno rozwiazanie")
  if b!=0: 
    print((-b)/(c1))
  else:
    if c==0:
      print("oo rozwiazan")
    else:
      print("rownanie sorzeczne")

m = [1,2,4,"gfhjg",12.0]

len(m)

m[0:4]

m.append(123)
m.append("ooo")
m

m=[]
m.append(123)
m.append("ooo")
m

m.append([1,2])
m

m+[1,2]

v= m + [1,2]
v

v[0]=1000

v

lista = [1,2,3]
krotka = (11,22,33)

lista[1]=333
lista

krotka[1]=444

def fun():
  return 1,"abc",243.0

a,b,c = fun()

print(a)
print(b)
print(c)

a = fun()

a

print(a[0])
print(a[1])
print(a[2])

m

123 in m

12 in m

m = []

m.append(12)
m.append(15)
m

for x in m: 
  print(x)

for i in range(1,10):
  print(i)

for i in range(1,10,2):
  print(i)

for i in range(0,13,3): #17
  print(i)

for i in range(-9,0,2): #18
  print(i)
  if i==-1:
   print(0)

lista2=[1,4,-6,10,11,15,20]

suma=0

for i in lista2:
  print(i)
  print(suma)
  suma=suma+int(i)
  


print(suma)

sum(lista2),max(lista2)

a=1
while a<10:
  print(a)
  print("poza pętlą")

a=int(input("Wspolczynnik a: "))
b=int(input("Wspolczynnik b: "))
potega=1
i=0
while i<abs(b):
  if b>0:
    potega*=a
    i=i+1
  else:
    potega*=1.0/a
    i=i+1
 

print(potega)-

def potega(a,b):
  potega=1
  i=0
  while i<abs(b):
    if b>0:
      potega*=a
      i=i+1
    else:
      potega*=1.0/a
      i=i+1
  return potega

potega(2,-8)

numbers = [55, 4, 92, 1, 104, 64, 73, 99, 20]

def max(a):
  max_value = None
  for num in a:
      if (max_value is None or num > max_value):
          max_value = num
  return(max_value)

max(numbers)

def sum(a):
  suma=0
  for i in a:
   
    suma=suma+int(i)
  return(suma)

def info_lista(a):
 return max(a),sum(a)

sum(numbers)

info_lista(numbers)

import numpy as np

a = np.array([1,3,5,2,7])
a

b = np.array([1,3,5.0,2,7])
b

b = np.array([3.14, 4, 2, 3],dtype=int)
b

c=np.array([[[1,2,3],[4,5,6]],[[1,2,3],[4,5,6]]])
c

d=np.array([[-3.0,2.3],[0.1,5.0],[8.0,11.0]])
d

e=np.array([[[2,4],[1,2],[8,9]],[[7,6],[-3,4],[0,8]]])
e

a.ndim,b.ndim,c.ndim,d.ndim,e.ndim

a.shape,b.shape,c.shape,d.shape,e.shape



